---
- name: OS packages
  package: "name={{ item }} state=present"
  with_items: "{{ openssl_pki_os_packages }}"

- name: Directories
  delegate_to: localhost
  file: "dest={{ item }} state=directory"
  with_items:
    - "{{ openssl_pki_certs_ca_root_dir }}"
    - "{{ openssl_pki_ca_path }}"
    - "{{ openssl_pki_ca_path }}/certs"
    - "{{ openssl_pki_ca_path }}/crl"
    - "{{ openssl_pki_ca_path }}/newcerts"
    - "{{ openssl_pki_ca_path }}/private"
    - "{{ openssl_pki_intermediate_ca_path }}"
    - "{{ openssl_pki_intermediate_ca_path }}/certs"
    - "{{ openssl_pki_intermediate_ca_path }}/crl"
    - "{{ openssl_pki_intermediate_ca_path }}/csr"
    - "{{ openssl_pki_intermediate_ca_path }}/newcerts"
    - "{{ openssl_pki_intermediate_ca_path }}/private"

- name: Set permissions for private directories
  delegate_to: localhost
  file:
    path: "{{ item }}"
    mode: 0700
  with_items:
    - "{{ openssl_pki_ca_path }}/private"
    - "{{ openssl_pki_intermediate_ca_path }}/private"

- name: Index files
  delegate_to: localhost
  file: "dest={{ item }} state=touch"
  with_items:
    - "{{ openssl_pki_ca_path }}/index.txt"
    - "{{ openssl_pki_intermediate_ca_path }}/index.txt"
    - "{{ openssl_pki_intermediate_chain }}"
  changed_when: false

- name: Serial files
  delegate_to: localhost
  copy: src=serial dest="{{ item }}" force=no
  with_items:
    - "{{ openssl_pki_ca_path }}/serial"
    - "{{ openssl_pki_intermediate_ca_path }}/serial"
    - "{{ openssl_pki_intermediate_ca_path }}/crlnumber"

- name: OpenSSL root config
  delegate_to: localhost
  template:
    src: root_openssl.cnf.j2
    dest: "{{ openssl_pki_root_config }}"

- name: OpenSSL intermediate config
  delegate_to: localhost
  template:
    src: intermediate_openssl.cnf.j2
    dest: "{{ openssl_pki_intermediate_config }}"

- name: Generate root key
  delegate_to: localhost
  command: "openssl genrsa -out {{ openssl_pki_root_key }} 4096"
  args:
    creates: "{{ openssl_pki_root_key }}"

- name: Set permissions for root ca key
  delegate_to: localhost
  file:
    path: "{{ openssl_pki_root_key }}"
    mode: 0400

- name: Generate root certificate
  delegate_to: localhost
  command: "openssl req -config {{ openssl_pki_root_config }} -subj {{ openssl_pki_ca_fields }} -key {{ openssl_pki_root_key }} -new -x509 -days {{ openssl_pki_ca_days }} -{{ openssl_pki_hash_type }} -extensions v3_ca -out {{ openssl_pki_root_cert }}"
  args:
    creates: "{{ openssl_pki_root_cert }}"

- name: Set permissions for root certificate
  delegate_to: localhost
  file:
    path: "{{ openssl_pki_root_cert }}"
    mode: 0444

- name: Generate intermediate key
  delegate_to: localhost
  command: "openssl genrsa -out {{ openssl_pki_intermediate_key }} 4096"
  args:
    creates: "{{ openssl_pki_intermediate_key }}"

- name: Set permissions for intermediate key
  delegate_to: localhost
  file:
    path: "{{ openssl_pki_intermediate_key }}"
    mode: 0400

- name: Generate intermediate csr
  delegate_to: localhost
  command: "openssl req -config {{ openssl_pki_intermediate_config }} -new -{{ openssl_pki_hash_type }} -subj {{ openssl_pki_intermediate_fields }} -key {{ openssl_pki_intermediate_key }} -out {{ openssl_pki_intermediate_csr }}"
  args:
    creates: "{{ openssl_pki_intermediate_csr }}"

- name: Generate intermediate certificate
  delegate_to: localhost
  command: "openssl ca -batch -config {{ openssl_pki_root_config }} -extensions v3_intermediate_ca -days {{ openssl_pki_intermediate_cert_days }} -notext -md {{ openssl_pki_hash_type }} -in {{ openssl_pki_intermediate_csr }} -out {{ openssl_pki_intermediate_cert }}"
  args:
    creates: "{{ openssl_pki_intermediate_cert }}"

- name: Set permissions for intermediate certificate
  delegate_to: localhost
  file:
    path: "{{ openssl_pki_intermediate_cert }}"
    mode: 0444

- name: Generate intermediate chain
  delegate_to: localhost
  template:
    src: ca-chain.cert.pem.j2
    dest: "{{ openssl_pki_intermediate_chain }}"

- name: Set permissions for intermediate chain
  delegate_to: localhost
  file:
    path: "{{ openssl_pki_intermediate_chain }}"
    mode: 0444

- name: Validate root and intermediate certs
  delegate_to: localhost
  command: "openssl verify -CAfile {{ openssl_pki_root_cert }} {{ openssl_pki_intermediate_cert }}"
  changed_when: false

- name: Server directories
  file: "dest={{ item }} state=directory"
  with_items:
    - "{{ openssl_pki_certs_server_root_dir }}"
    - "{{ openssl_pki_server_ca_path }}"

- name: Write SSL conf to servers
  template:
    src: intermediate_openssl.cnf.j2
    dest: "{{ openssl_pki_server_config }}"

- name: Generate server keys
  command: "openssl genrsa -out {{ openssl_pki_server_ca_path }}/{{ item }}.key.pem 2048"
  args:
    creates: "{{ openssl_pki_server_ca_path }}/{{ item }}.key.pem"
  with_items: "{{ openssl_pki_server_common_names }}"

- name: Set permissions for server keys
  file:
    path: "{{ openssl_pki_server_ca_path }}/{{ item }}.key.pem"
    mode: 0400
  with_items: "{{ openssl_pki_server_common_names }}"

- name: Generate server CSRs
  command: "openssl req -config {{ openssl_pki_server_config }} -subj {{ openssl_pki_common_fields }}/CN={{ item }} -key {{ openssl_pki_server_ca_path }}/{{ item }}.key.pem -new -{{ openssl_pki_hash_type }} -out {{ openssl_pki_server_ca_path }}/{{ item }}.csr.pem"
  args:
    creates: "{{ openssl_pki_server_ca_path }}/{{ item }}.csr.pem"
  with_items: "{{ openssl_pki_server_common_names }}"

- name: Copy server CSRs to controller
  fetch:
    src: "{{ openssl_pki_server_ca_path }}/{{ item }}.csr.pem"
    dest: "{{ openssl_pki_intermediate_ca_path }}/csr/"
    fail_on_missing: yes
  with_items: "{{ openssl_pki_server_common_names }}"

- name: Make server certificate destination directories
  delegate_to: localhost
  file: "dest={{ openssl_pki_intermediate_ca_path }}/certs/{{ item }} state=directory"
  with_items:
    - "{{ ansible_play_hosts }}"

- name: Generate server certificates
  delegate_to: localhost
  command: "openssl ca -batch -config {{ openssl_pki_intermediate_config }} -extensions server_cert -days {{ openssl_pki_server_cert_days }} -notext -md {{ openssl_pki_hash_type }} -in {{ openssl_pki_intermediate_ca_path }}/csr/{{ item[1] }}/{{ openssl_pki_server_ca_path }}/{{ item[0] }}.csr.pem -out {{ openssl_pki_intermediate_ca_path }}/certs/{{ item[1] }}/{{ item[0] }}.cert.pem"
  args:
    creates: "{{ openssl_pki_intermediate_ca_path }}/certs/{{ item[1] }}/{{ item[0] }}.cert.pem"
  with_nested:
    - "{{ openssl_pki_server_common_names }}"
    - "{{ ansible_play_hosts }}"

- name: Validate server certificates with chain
  delegate_to: localhost
  command: "openssl verify -CAfile {{ openssl_pki_intermediate_chain }} {{ openssl_pki_intermediate_ca_path }}/certs/{{ item[1] }}/{{ item[0] }}.cert.pem"
  changed_when: false
  with_nested:
    - "{{ openssl_pki_server_common_names }}"
    - "{{ ansible_play_hosts }}"

- name: Put signed certificates on servers
  copy:
    src: "{{ openssl_pki_intermediate_ca_path }}/certs/{{ inventory_hostname }}/{{ item }}.cert.pem"
    dest: "{{ openssl_pki_server_ca_path }}/{{ item }}.cert.pem"
  with_items: "{{ openssl_pki_server_common_names }}"

- name: Set permissions for server certificates
  file:
    path: "{{ openssl_pki_server_ca_path }}/{{ item }}.cert.pem"
    mode: 0444
  with_items: "{{ openssl_pki_server_common_names }}"
